name: CI

on:
  push:
    tags:
      - "*"
    branches: [ main ]
#    paths-ignore:
#      - '.github/workflows/**'
  pull_request:
    types: [opened, edited, reopened]
    branches: [ main ]

jobs:
  build:
    # if: github.repository == 'skip'
    # continue-on-error: true
    strategy:
      matrix:
        go-version: [1.20.x]
        os: [ubuntu-latest] # ,macos-latest
    runs-on: ${{ matrix.os }} # ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name: Go Format
        run: gofmt -s -w . && git diff --exit-code
      - name: Go Vet
        run: go vet ./...
      - name: Go Tidy
        run: go mod tidy && git diff --exit-code
      - name: Go Mod
        run: go mod download
      - name: Go Mod Verify
        run: go mod verify

      - name: Build
        shell: bash
        run: |
          make build

  golangci-lint:
    # if: github.repository == 'skip'
    # name: lint
    strategy:
      matrix:
        go-version: [ 1.20.x ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set Up Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install dependencies
        run: |
          go version
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.52.2
      - name: golangci-lint
        run: |
          make lint
  #      - name: Lint
  #        uses: golangci/golangci-lint-action@v3
  #        with:
  #          version: v1.52.2
  #          args: --timeout 5m
  test:
    #if: github.repository == 'skip'
    strategy:
      matrix:
        go-version: [ 1.20.x ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    needs: [build, golangci-lint]
    timeout-minutes: 5
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Test
        run: make test

      - name: Upload Coverage
        uses: codecov/codecov-action@v3
        continue-on-error: true
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./cover.out
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage-report
          path: coverage.html


